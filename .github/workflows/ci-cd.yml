name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with: { dotnet-version: '8.0.x' }
    
    - name: Start SQL Server
      run: |
        docker run -d --name sql-server \
          -e ACCEPT_EULA=Y \
          -e SA_PASSWORD=YourStrong@Pass \
          -e MSSQL_PID=Express \
          -p 1433:1433 \
          mcr.microsoft.com/mssql/server:2022-latest
        sleep 20
    
    - name: Run Unit Tests
      run: |
        cd Gamesbakery
        dotnet test Gamesbakery.BusinessLogic.Tests/Gamesbakery.BusinessLogic.Tests.csproj || true
    
    - name: Run Integration Tests
      run: |
        cd Gamesbakery
        export TEST_DB_CONNECTION="Server=localhost;Database=master;User Id=SA;Password=YourStrong@Pass;TrustServerCertificate=true;"
        dotnet test Gamesbakery.DataAccess.Tests/Gamesbakery.DataAccess.Tests.csproj || true
    
    - name: Run E2E Tests
      run: |
        cd Gamesbakery
        cp Gamesbakery.E2E.Tests/appsettings.json Gamesbakery.E2E.Tests/bin/Debug/net8.0/ || true
        cp Gamesbakery.E2E.Tests/appsettings.json Gamesbakery.E2E.Tests/bin/Release/net8.0/ || true
        dotnet test Gamesbakery.E2E.Tests/Gamesbakery.E2E.Tests.csproj || true
    
    - name: Cleanup
      if: always()
      run: docker rm -f sql-server